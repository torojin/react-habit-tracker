{"ast":null,"code":"var _jsxFileName = \"/Users/woojin/Desktop/GitHub/Coding_personal_study/react-basic/habit-tracker/src/app-mine.jsx\";\nimport './app.css';\nimport React, { Component } from 'react';\nimport Habits from './components/habits';\nimport Navbar from './components/navbar'; //이 habits라는 컴포넌트 안에 전체적인 데이터가 들어있기 때문에 데이터가 삭제되거나 추가되거나 변경되는 경우,\n// 이 컴포넌트 안에서 수정하는 로직들을 가지고 있어야합니다.\n// 한 마디로 데이터를 가지고 있는 곳이 내가 이 데이터를 어떻게 수정하면 되는지 잘 알고 있는 최고의 장소이기 때문에\n// 여기에서 처리해주는 것이 가장 좋습니다.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      habits: [{\n        id: 1,\n        name: 'Reading',\n        count: 0\n      }, {\n        id: 2,\n        name: 'Running',\n        count: 0\n      }, {\n        id: 3,\n        name: 'Coding',\n        count: 0\n      }],\n      input: ''\n    };\n\n    this.handleIncrement = habit => {\n      const habits = [...this.state.habits]; //habits의 배열을 하나씩 복사해 오는 것.\n\n      const index = habits.indexOf(habit); //arr.indexOf(searchElement)\n\n      habits[index].count++;\n      this.setState({\n        habits\n      }); //key와 value의 명칭이 같은 경우 하나로 작성해도 괜찮다. {habits:habits}= {habits} /value의 habits은 로컬 변수를 가르킨다.\n    };\n\n    this.handleDecrement = habit => {\n      const habits = [...this.state.habits];\n      const index = habits.indexOf(habit);\n      const count = habits[index].count - 1;\n      habits[index].count = count < 0 ? 0 : count; // 좋지 못한 코드\n\n      this.setState({\n        habits\n      });\n    };\n\n    this.handleDelete = habit => {\n      console.log(this.props.habit.id);\n      console.log(habit.id);\n      const habits = this.state.habits.filter(item => item.id !== habit.id); //item.id와 habit.id의 값이 다를때 배열을 남기고 새로운 배열로 반환\n\n      this.setState({\n        habits\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.handleClick = () => {\n      const habits = [...this.state.habits];\n      const id = new Date().getTime();\n      habits.push({\n        id: id,\n        name: this.state.input,\n        count: 0\n      });\n      this.setState({\n        habits\n      });\n      console.log(this.state.input);\n      console.log(habits);\n    };\n\n    this.addCount = () => {};\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navber, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Habit\",\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handleClick,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: this.state.habits.map(habit => /*#__PURE__*/_jsxDEV(Habits, {\n          habit: this.state.habit,\n          onIncrement: this.handleIncrement //habit.jsx에서 '+'를 클릭하면 onClick이 this.props.onIncrement(this.props.habit)를 전달\n          ,\n          onDecrement: this.handleDecrement,\n          onDelete: this.handleDelete\n        }, habit.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Reset All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/woojin/Desktop/GitHub/Coding_personal_study/react-basic/habit-tracker/src/app-mine.jsx"],"names":["React","Component","Habits","Navbar","App","state","habits","id","name","count","input","handleIncrement","habit","index","indexOf","setState","handleDecrement","handleDelete","console","log","props","filter","item","handleChange","event","target","value","handleClick","Date","getTime","push","addCount","render","map"],"mappings":"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","sourcesContent":["import './app.css';\nimport React, { Component } from 'react';\nimport Habits from './components/habits';\nimport Navbar from './components/navbar';\n//이 habits라는 컴포넌트 안에 전체적인 데이터가 들어있기 때문에 데이터가 삭제되거나 추가되거나 변경되는 경우,\n// 이 컴포넌트 안에서 수정하는 로직들을 가지고 있어야합니다.\n// 한 마디로 데이터를 가지고 있는 곳이 내가 이 데이터를 어떻게 수정하면 되는지 잘 알고 있는 최고의 장소이기 때문에\n// 여기에서 처리해주는 것이 가장 좋습니다.\nclass App extends Component {\n  state = {\n    habits: [\n      { id: 1, name: 'Reading', count: 0 },\n      { id: 2, name: 'Running', count: 0 },\n      { id: 3, name: 'Coding', count: 0 },\n    ],\n    input: '',\n  };\n\n  // 숫자를 증가하고 감소한다는 것은 어떤 특정한 habit의 count를 증가하고 감소하는 거기 때문에\n  //인자로는 어떤 특정한 habit을 전달받으면 그 habit에 해당하는 count를 증가해주면 되겠죠.\n  handleIncrement = (habit) => {\n    const habits = [...this.state.habits]; //habits의 배열을 하나씩 복사해 오는 것.\n    const index = habits.indexOf(habit); //arr.indexOf(searchElement)\n    habits[index].count++;\n    this.setState({ habits }); //key와 value의 명칭이 같은 경우 하나로 작성해도 괜찮다. {habits:habits}= {habits} /value의 habits은 로컬 변수를 가르킨다.\n  };\n\n  handleDecrement = (habit) => {\n    const habits = [...this.state.habits];\n    const index = habits.indexOf(habit);\n    const count = habits[index].count - 1;\n    habits[index].count = count < 0 ? 0 : count; // 좋지 못한 코드\n    this.setState({ habits });\n  };\n\n  handleDelete = (habit) => {\n    console.log(this.props.habit.id);\n    console.log(habit.id);\n    const habits = this.state.habits.filter((item) => item.id !== habit.id); //item.id와 habit.id의 값이 다를때 배열을 남기고 새로운 배열로 반환\n    this.setState({ habits });\n  };\n\n  handleChange = (event) => {\n    this.setState({ input: event.target.value });\n  };\n  handleClick = () => {\n    const habits = [...this.state.habits];\n    const id = new Date().getTime();\n    habits.push({ id: id, name: this.state.input, count: 0 });\n    this.setState({ habits });\n    console.log(this.state.input);\n    console.log(habits);\n  };\n  addCount = () => {};\n  render() {\n    return (\n      <div>\n        <Navber />\n        <div>\n          <input type='text' placeholder='Habit' onChange={this.handleChange} />\n          <button onClick={this.handleClick}>Add</button>\n        </div>\n        <section>\n          {this.state.habits.map((habit) => (\n            <Habits\n              key={habit.id}\n              habit={this.state.habit}\n              onIncrement={this.handleIncrement} //habit.jsx에서 '+'를 클릭하면 onClick이 this.props.onIncrement(this.props.habit)를 전달\n              onDecrement={this.handleDecrement}\n              onDelete={this.handleDelete}\n            />\n          ))}\n        </section>\n        <button>Reset All</button>\n      </div>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}