{"ast":null,"code":"var _jsxFileName = \"/Users/woojin/Desktop/GitHub/Coding_personal_study/react-basic/habit-tracker/src/components/habitAddForm.jsx\";\n//function component로 변경\n// 함수는 바로 변수에 접근이 가능하기 때문에 this를 사용하지 않는다.\n// state가 없다면 함수형 컴포넌트를 만들수있다.\nimport React, { memo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HabitAddForm = /*#__PURE__*/memo(_c = props => {\n  const formRef = /*#__PURE__*/React.createRef();\n  const inputRef = /*#__PURE__*/React.createRef();\n\n  const onSubmit = event => {\n    event.preventDefault();\n    const name = inputRef.current.value;\n    name && props.onAdd(name); // this.inputRef.current.value = '';\n\n    formRef.current.reset();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    ref: formRef,\n    className: \"add-form\",\n    onSubmit: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ref: inputRef,\n      className: \"add-input\",\n      type: \"text\",\n      placeholder: \"Habit\" //onChange={props.onChange}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-button\",\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n});\n_c2 = HabitAddForm;\nexport default HabitAddForm; //import React, { PureComponent } from 'react';\n\n/*class HabitAddForm extends PureComponent {\n  formRef = React.createRef();\n  inputRef = React.createRef();\n  onSubmit = (event) => {\n    event.preventDefault();\n    const name = this.inputRef.current.value;\n    name && this.props.onAdd(name);\n    // this.inputRef.current.value = '';\n    this.formRef.current.reset();\n  };\n  render() {\n    return (\n      <form ref={this.formRef} className='add-form' onSubmit={this.onSubmit}>\n        <input\n          ref={this.inputRef}\n          className='add-input'\n          type='text'\n          placeholder='Habit'\n          onChange={this.props.onChange}\n        />\n        <button className='add-button'>Add</button>\n      </form>\n    );\n  }\n}\n\nexport default HabitAddForm;\n*/\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"HabitAddForm$memo\");\n$RefreshReg$(_c2, \"HabitAddForm\");","map":{"version":3,"sources":["/Users/woojin/Desktop/GitHub/Coding_personal_study/react-basic/habit-tracker/src/components/habitAddForm.jsx"],"names":["React","memo","HabitAddForm","props","formRef","createRef","inputRef","onSubmit","event","preventDefault","name","current","value","onAdd","reset"],"mappings":";AAAA;AACA;AACA;AACA,OAAOA,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;;AAEA,MAAMC,YAAY,gBAAGD,IAAI,MAAEE,KAAD,IAAW;AACnC,QAAMC,OAAO,gBAAGJ,KAAK,CAACK,SAAN,EAAhB;AACA,QAAMC,QAAQ,gBAAGN,KAAK,CAACK,SAAN,EAAjB;;AAEA,QAAME,QAAQ,GAAIC,KAAD,IAAW;AAC1BA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,IAAI,GAAGJ,QAAQ,CAACK,OAAT,CAAiBC,KAA9B;AACAF,IAAAA,IAAI,IAAIP,KAAK,CAACU,KAAN,CAAYH,IAAZ,CAAR,CAH0B,CAI1B;;AACAN,IAAAA,OAAO,CAACO,OAAR,CAAgBG,KAAhB;AACD,GAND;;AAOA,sBACE;AAAM,IAAA,GAAG,EAAEV,OAAX;AAAoB,IAAA,SAAS,EAAC,UAA9B;AAAyC,IAAA,QAAQ,EAAEG,QAAnD;AAAA,4BACE;AACE,MAAA,GAAG,EAAED,QADP;AAEE,MAAA,SAAS,EAAC,WAFZ;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,WAAW,EAAC,OAJd,CAKE;;AALF;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAvBwB,CAAzB;MAAMJ,Y;AAyBN,eAAeA,YAAf,C,CAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["//function component로 변경\n// 함수는 바로 변수에 접근이 가능하기 때문에 this를 사용하지 않는다.\n// state가 없다면 함수형 컴포넌트를 만들수있다.\nimport React, { memo } from 'react';\n\nconst HabitAddForm = memo((props) => {\n  const formRef = React.createRef();\n  const inputRef = React.createRef();\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    const name = inputRef.current.value;\n    name && props.onAdd(name);\n    // this.inputRef.current.value = '';\n    formRef.current.reset();\n  };\n  return (\n    <form ref={formRef} className='add-form' onSubmit={onSubmit}>\n      <input\n        ref={inputRef}\n        className='add-input'\n        type='text'\n        placeholder='Habit'\n        //onChange={props.onChange}\n      />\n      <button className='add-button'>Add</button>\n    </form>\n  );\n});\n\nexport default HabitAddForm;\n\n//import React, { PureComponent } from 'react';\n/*class HabitAddForm extends PureComponent {\n  formRef = React.createRef();\n  inputRef = React.createRef();\n  onSubmit = (event) => {\n    event.preventDefault();\n    const name = this.inputRef.current.value;\n    name && this.props.onAdd(name);\n    // this.inputRef.current.value = '';\n    this.formRef.current.reset();\n  };\n  render() {\n    return (\n      <form ref={this.formRef} className='add-form' onSubmit={this.onSubmit}>\n        <input\n          ref={this.inputRef}\n          className='add-input'\n          type='text'\n          placeholder='Habit'\n          onChange={this.props.onChange}\n        />\n        <button className='add-button'>Add</button>\n      </form>\n    );\n  }\n}\n\nexport default HabitAddForm;\n*/\n"]},"metadata":{},"sourceType":"module"}